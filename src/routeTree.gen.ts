/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as LessonPlansImport } from './routes/lesson-plans'
import { Route as GradeCalculatorImport } from './routes/grade-calculator'
import { Route as IndexImport } from './routes/index'
import { Route as GradeTrendsIndexImport } from './routes/grade-trends/index'
import { Route as BrowseIndexImport } from './routes/browse/index'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LessonPlansRoute = LessonPlansImport.update({
  id: '/lesson-plans',
  path: '/lesson-plans',
  getParentRoute: () => rootRoute,
} as any)

const GradeCalculatorRoute = GradeCalculatorImport.update({
  id: '/grade-calculator',
  path: '/grade-calculator',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GradeTrendsIndexRoute = GradeTrendsIndexImport.update({
  id: '/grade-trends/',
  path: '/grade-trends/',
  getParentRoute: () => rootRoute,
} as any)

const BrowseIndexRoute = BrowseIndexImport.update({
  id: '/browse/',
  path: '/browse/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/grade-calculator': {
      id: '/grade-calculator'
      path: '/grade-calculator'
      fullPath: '/grade-calculator'
      preLoaderRoute: typeof GradeCalculatorImport
      parentRoute: typeof rootRoute
    }
    '/lesson-plans': {
      id: '/lesson-plans'
      path: '/lesson-plans'
      fullPath: '/lesson-plans'
      preLoaderRoute: typeof LessonPlansImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/browse/': {
      id: '/browse/'
      path: '/browse'
      fullPath: '/browse'
      preLoaderRoute: typeof BrowseIndexImport
      parentRoute: typeof rootRoute
    }
    '/grade-trends/': {
      id: '/grade-trends/'
      path: '/grade-trends'
      fullPath: '/grade-trends'
      preLoaderRoute: typeof GradeTrendsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/grade-calculator': typeof GradeCalculatorRoute
  '/lesson-plans': typeof LessonPlansRoute
  '/profile': typeof ProfileRoute
  '/browse': typeof BrowseIndexRoute
  '/grade-trends': typeof GradeTrendsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/grade-calculator': typeof GradeCalculatorRoute
  '/lesson-plans': typeof LessonPlansRoute
  '/profile': typeof ProfileRoute
  '/browse': typeof BrowseIndexRoute
  '/grade-trends': typeof GradeTrendsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/grade-calculator': typeof GradeCalculatorRoute
  '/lesson-plans': typeof LessonPlansRoute
  '/profile': typeof ProfileRoute
  '/browse/': typeof BrowseIndexRoute
  '/grade-trends/': typeof GradeTrendsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/grade-calculator'
    | '/lesson-plans'
    | '/profile'
    | '/browse'
    | '/grade-trends'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/grade-calculator'
    | '/lesson-plans'
    | '/profile'
    | '/browse'
    | '/grade-trends'
  id:
    | '__root__'
    | '/'
    | '/grade-calculator'
    | '/lesson-plans'
    | '/profile'
    | '/browse/'
    | '/grade-trends/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GradeCalculatorRoute: typeof GradeCalculatorRoute
  LessonPlansRoute: typeof LessonPlansRoute
  ProfileRoute: typeof ProfileRoute
  BrowseIndexRoute: typeof BrowseIndexRoute
  GradeTrendsIndexRoute: typeof GradeTrendsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GradeCalculatorRoute: GradeCalculatorRoute,
  LessonPlansRoute: LessonPlansRoute,
  ProfileRoute: ProfileRoute,
  BrowseIndexRoute: BrowseIndexRoute,
  GradeTrendsIndexRoute: GradeTrendsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/grade-calculator",
        "/lesson-plans",
        "/profile",
        "/browse/",
        "/grade-trends/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/grade-calculator": {
      "filePath": "grade-calculator.tsx"
    },
    "/lesson-plans": {
      "filePath": "lesson-plans.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/browse/": {
      "filePath": "browse/index.tsx"
    },
    "/grade-trends/": {
      "filePath": "grade-trends/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
